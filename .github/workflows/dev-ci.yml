name: Dev CI/CI Pipeline

on:
  push:
    branches:
      - dev

jobs:
  build-and-deploy:
    runs-on: ubuntu-22.04

    steps:
      # 1. GitHub 저장소의 코드를 체크아웃합니다.
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Java 21을 설치합니다.
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'zulu'

      # 3. 애플리케이션 빌드
      - name: Build with Gradle
        run: ./gradlew clean build

      # 4. Docker 관련 파일을 EC2 서버로 복사합니다.
      - name: Deploy Docker files to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_DEV_HOST }}
          username: ${{ secrets.EC2_DEV_USER }}
          key: ${{ secrets.EC2_DEV_SSH_KEY }}
          port: 22
          source: "Dockerfile,docker-compose.yml,build/libs/circle-on-0.0.1-SNAPSHOT.jar"
          target: "~/circle-on"

      # 5. EC2에서 Docker Compose 실행
      - name: Run Docker Compose on EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_DEV_HOST }}
          username: ${{ secrets.EC2_DEV_USER }}
          key: ${{ secrets.EC2_DEV_SSH_KEY }}
          port: 22
          script: |
            cd ~/circle-on
            export DB_URL=${{ secrets.DB_URL_DEV }}
            export DB_USERNAME=${{ secrets.DB_USERNAME_DEV }}
            export DB_PASSWORD=${{ secrets.DB_PASSWORD_DEV }}
            docker compose down
            docker compose up --build -d