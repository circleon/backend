name: Dev CI/CI Pipeline

on:
  push:
    branches:
      - dev

jobs:
  build-and-deploy:
    runs-on: ubuntu-22.04

    steps:

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'zulu'

      - name: Save SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_DEV_SSH_KEY }}" > /tmp/ssh_key.pem
          chmod 600 /tmp/ssh_key.pem
          ssh-keyscan -H ${{ secrets.EC2_DEV_HOST }} >> ~/.ssh/known_hosts

      - name: Set up SSH Tunnel for RDS
        run: ssh -i /tmp/ssh_key.pem -f -N -L 13306:${{ secrets.RDS_DEV_HOST }} ${{ secrets.EC2_DEV_USER }}@${{ secrets.EC2_DEV_HOST }}

      - name: Build with Gradle
        run: ./gradlew clean build
        env:
          DB_URL: ${{ secrets.DB_URL_LOCAL }}
          DB_USERNAME: ${{ secrets.DB_USERNAME_DEV }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD_DEV }}
          AWS_SES_ACCESS_KEY: ${{ secrets.AWS_SES_ACCESS_KEY }}
          AWS_SES_SECRET_ACCESS_KEY: ${{ secrets.AWS_SES_SECRET_ACCESS_KEY }}

      - name: Close SSH Tunnel
        run: pkill -f "ssh -f -N -L"

      - name: Verify SSH Tunnel is Closed
        run: |
          if pgrep -f "ssh -f -N -L"; then
            echo "SSH Tunnel still active"
            exit 1
          else
            echo "SSH Tunnel closed"
          fi

      - name: Remove SSH KEY
        run: rm /tmp/ssh_key.pem

      - name: Deploy Docker files to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_DEV_HOST }}
          username: ${{ secrets.EC2_DEV_USER }}
          key: ${{ secrets.EC2_DEV_SSH_KEY }}
          port: 22
          source: "Dockerfile,docker-compose.yml,build/libs/circle-on-0.0.1-SNAPSHOT.jar"
          target: "~/circle-on"

      - name: Run Docker Compose on EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_DEV_HOST }}
          username: ${{ secrets.EC2_DEV_USER }}
          key: ${{ secrets.EC2_DEV_SSH_KEY }}
          port: 22
          script: |
            cd ~/circle-on
            export DB_URL=${{ secrets.DB_URL_DEV }}
            export DB_USERNAME=${{ secrets.DB_USERNAME_DEV }}
            export DB_PASSWORD=${{ secrets.DB_PASSWORD_DEV }}
            export AWS_SES_ACCESS_KEY=${{ secrets.AWS_SES_ACCESS_KEY }}
            export AWS_SES_SECRET_ACCESS_KEY=${{ secrets.AWS_SES_SECRET_ACCESS_KEY }}
            docker compose down
            docker compose up --build -d