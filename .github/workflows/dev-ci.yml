name: Dev CI/CI Pipeline

on:
  push:
    branches:
      - dev

jobs:
  build-and-deploy:
    runs-on: ubuntu-22.04

    steps:

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'zulu'

      - name: Build with Gradle
        run: ./gradlew clean build
        env:
          SPRING_PROFILES_ACTIVE: ci

      - name: Deploy Docker files to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_DEV_HOST }}
          username: ${{ secrets.EC2_DEV_USER }}
          key: ${{ secrets.EC2_DEV_SSH_KEY }}
          port: 22
          source: "Dockerfile,docker-compose.yml,prometheus.yml,build/libs/circle-on-0.0.1-SNAPSHOT.jar"
          target: "~/circle-on"

      - name: Create .env file
        run: |
          echo "DB_URL=${{ secrets.DB_URL_DEV }}" > .env
          echo "DB_USERNAME=${{ secrets.DB_USERNAME_DEV }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD_DEV }}" >> .env
          echo "AWS_SES_ACCESS_KEY=${{ secrets.AWS_SES_ACCESS_KEY }}" >> .env
          echo "AWS_SES_SECRET_ACCESS_KEY=${{ secrets.AWS_SES_SECRET_ACCESS_KEY }}" >> .env
          echo "JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}" >> .env
          echo "IMAGE_STORAGE_PATH=${{ secrets.IMAGE_STORAGE_PATH }}" >> .env
          echo "LOG_STORAGE_PATH=${{ secrets.LOG_STORAGE_PATH }}" >> .env
          echo "LOG_PATH=${{ secrets.LOG_PATH }}" >> .env
          echo "PROMETHEUS_PATH=${{ secrets.PROMETHEUS_PATH }}" >> .env
          echo "GRAFANA_PASSWORD=${{ secrets.GRAFANA_PASSWORD }}" >> .env
          echo "EMAIL=${{ secrets.EMAIL }}" >> .env
          echo "SIGNED_URL_SECRET_KEY=${{ secrets.SIGNED_URL_SECRET_KEY }}" >> .env
          echo "SPRING_PROFILES_ACTIVE=staging" >> .env
          echo "CERTBOT_DOMAIN=api.circleondev.site" >> .env

      - name: Upload .env to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_DEV_HOST }}
          username: ${{ secrets.EC2_DEV_USER }}
          key: ${{ secrets.EC2_DEV_SSH_KEY }}
          port: 22
          source: ".env"
          target: "~/circle-on"

      - name: Run Docker Compose on EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_DEV_HOST }}
          username: ${{ secrets.EC2_DEV_USER }}
          key: ${{ secrets.EC2_DEV_SSH_KEY }}
          port: 22
          script: |
            mkdir -p ~/circle-on
            cd ~/circle-on
            
            docker compose stop backend prometheus grafana
            
            docker compose rm -f backend prometheus grafana
            
            docker compose up --build -d backend
            docker compose up -d prometheus grafana
            
