services:
  backend:
    build: .
    image: circle-on-backend:dev
    container_name: circle-on-app
    restart: always
    mem_limit: 1g
    memswap_limit: 2g
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "1"
    ports:
      - "8080:8080"
    volumes:
      - ${IMAGE_STORAGE_PATH}:/app/images
      - ${LOG_STORAGE_PATH}:${LOG_PATH}
    environment:
      - DB_URL=${DB_URL}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - AWS_SES_ACCESS_KEY=${AWS_SES_ACCESS_KEY}
      - AWS_SES_SECRET_ACCESS_KEY=${AWS_SES_SECRET_ACCESS_KEY}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - LOG_PATH=${LOG_PATH}
      - TZ=Asia/Seoul
#    command: ["sleep", "infinity"]
#    entrypoint: ["java", "-XX:+UseContainerSupport", "-Xmx1638m", "-jar", "/app/circle-on.jar"]

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: always
    mem_limit: 100m
    memswap_limit: 400m
    volumes:
      - ${PROMETHEUS_PATH}:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"


  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: always
    mem_limit: 100m
    memswap_limit: 400m
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
    ports:
      - "3001:3000"
    volumes:
      - grafana-data:/var/lib/grafana


volumes:
  grafana-data: